(define a (* 5 5))
(* a a)
(* 7 6)
(- 10 1 2 3)
(define (square x) (* x x))
(define (p) (p))

(define (test x y) 
  (if (= x 0) 
    0 
    y))
(define (mult-five? x)
  (cond ((= (modulo x 5) 0) #t)
        (#t #f)
        )
  )
(define (>= x y) 
    (not (< x y)))
(/ (+ 5 4 (- 2 (- 3 (+ 6 (/ 4 5))))) (* 3 (- 6 2) (- 2 7)))
(define (large-square a b c)
 (cond (and (< a b) (< a c)) ) 
  )
